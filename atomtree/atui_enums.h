/*
Enums for ATUI_ENUM
See ppatui.h for PPATUI_ENUMER() definition
See atui_atomfirmware.c for purpose
*/

/*
def enum_to_atui(s):
	import re
	s = re.sub("\n    ","\n\t", s)
	s = re.sub("enum\s+([a-zA-Z0-9_]+).*{", "PPATUI_ENUMER(\g<1>,", s)
	s = re.sub("\t([a-zA-Z0-9_]+).*\n","\t\g<1>,\n",s)
	s = re.sub(",\n};","\n)",s)
	print(s)

enum_to_atui(s)


*/
#ifndef ATUI_ENUMS_H
#define ATUI_ENUMS_H

/******************************************************************************/
// atomfirmware.h

PPATUI_ENUMER(I2cControllerPort_e,
	I2C_CONTROLLER_PORT_0,
	I2C_CONTROLLER_PORT_1
)
PPATUI_ENUMER(I2cControllerName_e,
	I2C_CONTROLLER_NAME_VR_GFX,
	I2C_CONTROLLER_NAME_VR_SOC,
	I2C_CONTROLLER_NAME_VR_VDDCI,
	I2C_CONTROLLER_NAME_VR_MVDD,
	I2C_CONTROLLER_NAME_LIQUID_0,
	I2C_CONTROLLER_NAME_LIQUID_1,
	I2C_CONTROLLER_NAME_PLX,
	I2C_CONTROLLER_NAME_SPARE,
	I2C_CONTROLLER_NAME_FAN_INTAKE,

	I2C_CONTROLLER_NAME_COUNT,
	I2C_CONTROLLER_NAME_COUNT_SMU11_PPT3,
	I2C_CONTROLLER_NAME_COUNT_SMU11_PPT8,
	I2C_CONTROLLER_NAME_COUNT_SMU11_PPT7,
	I2C_CONTROLLER_NAME_COUNT_SMU13
)
PPATUI_ENUMER(I2cControllerThrottler_e,
	I2C_CONTROLLER_THROTTLER_TYPE_NONE,
	I2C_CONTROLLER_THROTTLER_VR_GFX,
	I2C_CONTROLLER_THROTTLER_VR_SOC,
	I2C_CONTROLLER_THROTTLER_VR_VDDCI,
	I2C_CONTROLLER_THROTTLER_VR_MVDD,
	I2C_CONTROLLER_THROTTLER_LIQUID_0,
	I2C_CONTROLLER_THROTTLER_LIQUID_1,
	I2C_CONTROLLER_THROTTLER_PLX,
	I2C_CONTROLLER_THROTTLER_FAN_INTAKE,
	I2C_CONTROLLER_THROTTLER_INA3221
)
PPATUI_ENUMER(I2cControllerProtocol_e,
	I2C_CONTROLLER_PROTOCOL_VR_XPDE132G5,
	I2C_CONTROLLER_PROTOCOL_VR_IR35217,
	I2C_CONTROLLER_PROTOCOL_TMP_TMP102A,
	I2C_CONTROLLER_PROTOCOL_TMP_MAX31875,
	I2C_CONTROLLER_PROTOCOL_INA3221,
	I2C_CONTROLLER_PROTOCOL_TMP_MAX6604,

	I2C_CONTROLLER_PROTOCOL_SPARE_0,
	I2C_CONTROLLER_PROTOCOL_SPARE_1,
	I2C_CONTROLLER_PROTOCOL_SPARE_2
)
PPATUI_ENUMER(I2cControllerSpeed_e,
	I2C_SPEED_FAST_50K,
	I2C_SPEED_FAST_100K,
	I2C_SPEED_FAST_400K,
	I2C_SPEED_FAST_PLUS_1M,
	I2C_SPEED_HIGH_1M,
	I2C_SPEED_HIGH_2M,

	I2C_CONTROLLER_SPEED_SLOW,
	I2C_CONTROLLER_SPEED_FAST
)


PPATUI_ENUMER(atom_lcd_info_panel_misc,
	ATOM_PANEL_MISC_FPDI
)
PPATUI_ENUMER(atom_lcd_info_dptolvds_rx_id,
	eDP_TO_LVDS_RX_DISABLE,
	eDP_TO_LVDS_COMMON_ID,
	eDP_TO_LVDS_REALTEK_ID
)


PPATUI_ENUMER(atom_spread_spectrum_mode,
	ATOM_SS_CENTER_OR_DOWN_MODE_MASK,
	ATOM_SS_DOWN_SPREAD_MODE,
	ATOM_SS_CENTRE_SPREAD_MODE,
	ATOM_INT_OR_EXT_SS_MASK,
	ATOM_INTERNAL_SS_MASK,
	ATOM_EXTERNAL_SS_MASK
)


PPATUI_ENUMER(atom_dgpu_vram_type,
	ATOM_DGPU_VRAM_TYPE_GDDR5,
	ATOM_DGPU_VRAM_TYPE_HBM2,
	ATOM_DGPU_VRAM_TYPE_HBM2E,
	ATOM_DGPU_VRAM_TYPE_GDDR6,
	ATOM_DGPU_VRAM_TYPE_HBM3
)


PPATUI_ENUMER(atom_voltage_type,
	VOLTAGE_TYPE_VDDC,
	VOLTAGE_TYPE_MVDDC,
	VOLTAGE_TYPE_MVDDQ,
	VOLTAGE_TYPE_VDDCI,
	VOLTAGE_TYPE_VDDGFX,
	VOLTAGE_TYPE_PCC,
	VOLTAGE_TYPE_MVPP,
	VOLTAGE_TYPE_LEDDPM,
	VOLTAGE_TYPE_PCC_MVDD,
	VOLTAGE_TYPE_PCIE_VDDC,
	VOLTAGE_TYPE_PCIE_VDDR,
	VOLTAGE_TYPE_GENERIC_I2C_1,
	VOLTAGE_TYPE_GENERIC_I2C_2,
	VOLTAGE_TYPE_GENERIC_I2C_3,
	VOLTAGE_TYPE_GENERIC_I2C_4,
	VOLTAGE_TYPE_GENERIC_I2C_5,
	VOLTAGE_TYPE_GENERIC_I2C_6,
	VOLTAGE_TYPE_GENERIC_I2C_7,
	VOLTAGE_TYPE_GENERIC_I2C_8,
	VOLTAGE_TYPE_GENERIC_I2C_9,
	VOLTAGE_TYPE_GENERIC_I2C_10
)
PPATUI_ENUMER(atom_voltage_object_mode,
	VOLTAGE_OBJ_GPIO_LUT,
	VOLTAGE_OBJ_VR_I2C_INIT_SEQ,
	VOLTAGE_OBJ_PHASE_LUT,
	VOLTAGE_OBJ_SVID2,
	VOLTAGE_OBJ_EVV,
	VOLTAGE_OBJ_MERGED_POWER
)


/******************************************************************************/
// powerplay.h


PPATUI_ENUMER(XGMI_LINK_RATE_e, // rate x Gbps
	XGMI_LINK_RATE_2,
	XGMI_LINK_RATE_4,
	XGMI_LINK_RATE_8,
	XGMI_LINK_RATE_12,
	XGMI_LINK_RATE_16,
	XGMI_LINK_RATE_17,
	XGMI_LINK_RATE_18,
	XGMI_LINK_RATE_19,
	XGMI_LINK_RATE_20,
	XGMI_LINK_RATE_21,
	XGMI_LINK_RATE_22,
	XGMI_LINK_RATE_23,
	XGMI_LINK_RATE_24,
	XGMI_LINK_RATE_25,
	XGMI_LINK_RATE_COUNT
)

PPATUI_ENUMER(XGMI_LINK_WIDTH_e,
	XGMI_LINK_WIDTH_1,
	XGMI_LINK_WIDTH_2,
	XGMI_LINK_WIDTH_4,
	XGMI_LINK_WIDTH_8,
	XGMI_LINK_WIDTH_9,
	XGMI_LINK_WIDTH_16,
	XGMI_LINK_WIDTH_COUNT
)

PPATUI_ENUMER(PPT_THROTTLER_e,
	PPT_THROTTLER_PPT0,
	PPT_THROTTLER_PPT1,
	PPT_THROTTLER_PPT2,
	PPT_THROTTLER_PPT3,
	PPT_THROTTLER_COUNT
)

PPATUI_ENUMER(POWER_SOURCE_e,
	POWER_SOURCE_AC,
	POWER_SOURCE_DC,
	POWER_SOURCE_COUNT
)

PPATUI_ENUMER(CUSTOMER_VARIANT_e,
	CUSTOMER_VARIANT_ROW,
	CUSTOMER_VARIANT_FALCON,
	CUSTOMER_VARIANT_COUNT
)

PPATUI_ENUMER(TDC_THROTTLER_e,
	TDC_THROTTLER_GFX,
	TDC_THROTTLER_SOC,
	TDC_THROTTLER_U,

	TDC_THROTTLER_COUNT_SMU11,
	TDC_THROTTLER_COUNT_SMU13
)

PPATUI_ENUMER(UCLK_DIV_e,
	UCLK_DIV_BY_1,
	UCLK_DIV_BY_2,
	UCLK_DIV_BY_4,
	UCLK_DIV_BY_8
)

PPATUI_ENUMER(PwrConfig_e,
	PWR_CONFIG_TDP,
	PWR_CONFIG_TGP,
	PWR_CONFIG_TCP_ESTIMATED,
	PWR_CONFIG_TCP_MEASURED
)

PPATUI_ENUMER(PCIE_SPEED_e,
	PCIE_LINK_SPEED_PCIE_1,
	PCIE_LINK_SPEED_PCIE_2,
	PCIE_LINK_SPEED_PCIE_3,
	PCIE_LINK_SPEED_PCIE_4,
	PCIE_LINK_SPEED_PCIE_5
)
PPATUI_ENUMER(PCIE_WIDTH_e,
	PCIE_LINK_WIDTH_x1,
	PCIE_LINK_WIDTH_x2,
	PCIE_LINK_WIDTH_x4,
	PCIE_LINK_WIDTH_x8,
	PCIE_LINK_WIDTH_x12,
	PCIE_LINK_WIDTH_x16
)

PPATUI_ENUMER(DPM_PSTATES_e,
	DPM_PSTATE_P0,
	DPM_PSTATE_P1,
	DPM_PSTATE_P2,
	DPM_PSTATE_P3
)

PPATUI_ENUMER(VOLTAGE_MODE_e,
	VOLTAGE_MODE_AVFS,
	VOLTAGE_MODE_AVFS_SS,
	VOLTAGE_MODE_SS,
	VOLTAGE_MODE_COUNT
)
PPATUI_ENUMER(AVFS_VOLTAGE_TYPE_e,
	AVFS_VOLTAGE_GFX,
	AVFS_VOLTAGE_SOC,
	AVFS_VOLTAGE_COUNT
)

PPATUI_ENUMER(GFXCLK_SOURCE_e,
	GFXCLK_SOURCE_PLL,
	GFXCLK_SOURCE_DFLL
)


/******************************************************************************/
// smu_v11_0_pptable.h / smu11_driver_if.h

PPATUI_ENUMER(DfllDroopModelSelect_e,
	PIECEWISE_LINEAR_FUSED_MODEL,
	PIECEWISE_LINEAR_PP_MODEL,
	QUADRATIC_PP_MODEL,
	PERPART_PIECEWISE_LINEAR_PP_MODEL,
	DFLLDROOPMODELSELECT_COUNT
)

PPATUI_ENUMER(SMU11_PPT3_PPCLK,
	SMU11_PPT3_PPCLK_GFXCLK,
	SMU11_PPT3_PPCLK_VCLK,
	SMU11_PPT3_PPCLK_DCLK,
	SMU11_PPT3_PPCLK_ECLK,
	SMU11_PPT3_PPCLK_SOCCLK,
	SMU11_PPT3_PPCLK_UCLK,
	SMU11_PPT3_PPCLK_DCEFCLK,
	SMU11_PPT3_PPCLK_DISPCLK,
	SMU11_PPT3_PPCLK_PIXCLK,
	SMU11_PPT3_PPCLK_PHYCLK,
	SMU11_PPT3_PPCLK_FCLK,
	SMU11_PPT3_PPCLK_COUNT
)
PPATUI_ENUMER(SMU11_PPT8_PPCLK,
	SMU11_PPT8_PPCLK_GFXCLK,
	SMU11_PPT8_PPCLK_SOCCLK,
	SMU11_PPT8_PPCLK_UCLK,
	SMU11_PPT8_PPCLK_DCLK,
	SMU11_PPT8_PPCLK_VCLK,
	SMU11_PPT8_PPCLK_DCEFCLK,
	SMU11_PPT8_PPCLK_DISPCLK,
	SMU11_PPT8_PPCLK_PIXCLK,
	SMU11_PPT8_PPCLK_PHYCLK,
	SMU11_PPT8_PPCLK_COUNT
)
PPATUI_ENUMER(SMU11_PPT7_PPCLK_e,
	SMU11_PPT7_PPCLK_GFXCLK,
	SMU11_PPT7_PPCLK_SOCCLK,
	SMU11_PPT7_PPCLK_UCLK,
	SMU11_PPT7_PPCLK_FCLK,
	SMU11_PPT7_PPCLK_DCLK_0,
	SMU11_PPT7_PPCLK_VCLK_0,
	SMU11_PPT7_PPCLK_DCLK_1,
	SMU11_PPT7_PPCLK_VCLK_1,
	SMU11_PPT7_PPCLK_DCEFCLK,
	SMU11_PPT7_PPCLK_DISPCLK,
	SMU11_PPT7_PPCLK_PIXCLK,
	SMU11_PPT7_PPCLK_PHYCLK,
	SMU11_PPT7_PPCLK_DTBCLK,
	SMU11_PPT7_PPCLK_COUNT
)

PPATUI_ENUMER(TEMP_SMU11_0_7_e,
	TEMP_SMU_11_0_7_EDGE,
	TEMP_SMU_11_0_7_HOTSPOT,
	TEMP_SMU_11_0_7_MEM,
	TEMP_SMU_11_0_7_VR_GFX,
	TEMP_SMU_11_0_7_VR_MEM0,
	TEMP_SMU_11_0_7_VR_MEM1,
	TEMP_SMU_11_0_7_VR_SOC,
	TEMP_SMU_11_0_7_LIQUID0,
	TEMP_SMU_11_0_7_LIQUID1,
	TEMP_SMU_11_0_7_PLX,
	TEMP_SMU_11_0_7_COUNT
)


PPATUI_ENUMER(SMU_11_0_ODFEATURE_CAP,
	SMU_11_0_ODCAP_GFXCLK_LIMITS,
	SMU_11_0_ODCAP_GFXCLK_CURVE,
	SMU_11_0_ODCAP_UCLK_MAX,
	SMU_11_0_ODCAP_POWER_LIMIT,
	SMU_11_0_ODCAP_FAN_ACOUSTIC_LIMIT,
	SMU_11_0_ODCAP_FAN_SPEED_MIN,
	SMU_11_0_ODCAP_TEMPERATURE_FAN,
	SMU_11_0_ODCAP_TEMPERATURE_SYSTEM,
	SMU_11_0_ODCAP_MEMORY_TIMING_TUNE,
	SMU_11_0_ODCAP_FAN_ZERO_RPM_CONTROL,
	SMU_11_0_ODCAP_AUTO_UV_ENGINE,
	SMU_11_0_ODCAP_AUTO_OC_ENGINE,
	SMU_11_0_ODCAP_AUTO_OC_MEMORY,
	SMU_11_0_ODCAP_FAN_CURVE,
	SMU_11_0_ODCAP_COUNT
)
PPATUI_ENUMER(SMU_11_0_7_ODFEATURE_CAP,
	SMU_11_0_7_ODCAP_GFXCLK_LIMITS,
	SMU_11_0_7_ODCAP_GFXCLK_CURVE,
	SMU_11_0_7_ODCAP_UCLK_LIMITS,
	SMU_11_0_7_ODCAP_POWER_LIMIT,
	SMU_11_0_7_ODCAP_FAN_ACOUSTIC_LIMIT,
	SMU_11_0_7_ODCAP_FAN_SPEED_MIN,
	SMU_11_0_7_ODCAP_TEMPERATURE_FAN,
	SMU_11_0_7_ODCAP_TEMPERATURE_SYSTEM,
	SMU_11_0_7_ODCAP_MEMORY_TIMING_TUNE,
	SMU_11_0_7_ODCAP_FAN_ZERO_RPM_CONTROL,
	SMU_11_0_7_ODCAP_AUTO_UV_ENGINE,
	SMU_11_0_7_ODCAP_AUTO_OC_ENGINE,
	SMU_11_0_7_ODCAP_AUTO_OC_MEMORY,
	SMU_11_0_7_ODCAP_FAN_CURVE,
	SMU_11_0_ODCAP_AUTO_FAN_ACOUSTIC_LIMIT,
	SMU_11_0_7_ODCAP_POWER_MODE,
	SMU_11_0_7_ODCAP_COUNT
)

PPATUI_ENUMER(SMU_11_0_ODSETTING_ID, // index into array
	SMU_11_0_ODSETTING_GFXCLKFMAX,
	SMU_11_0_ODSETTING_GFXCLKFMIN,
	SMU_11_0_ODSETTING_VDDGFXCURVEFREQ_P1,
	SMU_11_0_ODSETTING_VDDGFXCURVEVOLTAGE_P1,
	SMU_11_0_ODSETTING_VDDGFXCURVEFREQ_P2,
	SMU_11_0_ODSETTING_VDDGFXCURVEVOLTAGE_P2,
	SMU_11_0_ODSETTING_VDDGFXCURVEFREQ_P3,
	SMU_11_0_ODSETTING_VDDGFXCURVEVOLTAGE_P3,
	SMU_11_0_ODSETTING_UCLKFMAX,
	SMU_11_0_ODSETTING_POWERPERCENTAGE,
	SMU_11_0_ODSETTING_FANRPMMIN,
	SMU_11_0_ODSETTING_FANRPMACOUSTICLIMIT,
	SMU_11_0_ODSETTING_FANTARGETTEMPERATURE,
	SMU_11_0_ODSETTING_OPERATINGTEMPMAX,
	SMU_11_0_ODSETTING_ACTIMING,
	SMU_11_0_ODSETTING_FAN_ZERO_RPM_CONTROL,
	SMU_11_0_ODSETTING_AUTOUVENGINE,
	SMU_11_0_ODSETTING_AUTOOCENGINE,
	SMU_11_0_ODSETTING_AUTOOCMEMORY,
	SMU_11_0_ODSETTING_COUNT
)
PPATUI_ENUMER(SMU_11_0_7_ODSETTING_ID,
	SMU_11_0_7_ODSETTING_GFXCLKFMAX,
	SMU_11_0_7_ODSETTING_GFXCLKFMIN,
	SMU_11_0_7_ODSETTING_CUSTOM_GFX_VF_CURVE_A,
	SMU_11_0_7_ODSETTING_CUSTOM_GFX_VF_CURVE_B,
	SMU_11_0_7_ODSETTING_CUSTOM_GFX_VF_CURVE_C,
	SMU_11_0_7_ODSETTING_CUSTOM_CURVE_VFT_FMIN,
	SMU_11_0_7_ODSETTING_UCLKFMIN,
	SMU_11_0_7_ODSETTING_UCLKFMAX,
	SMU_11_0_7_ODSETTING_POWERPERCENTAGE,
	SMU_11_0_7_ODSETTING_FANRPMMIN,
	SMU_11_0_7_ODSETTING_FANRPMACOUSTICLIMIT,
	SMU_11_0_7_ODSETTING_FANTARGETTEMPERATURE,
	SMU_11_0_7_ODSETTING_OPERATINGTEMPMAX,
	SMU_11_0_7_ODSETTING_ACTIMING,
	SMU_11_0_7_ODSETTING_FAN_ZERO_RPM_CONTROL,
	SMU_11_0_7_ODSETTING_AUTOUVENGINE,
	SMU_11_0_7_ODSETTING_AUTOOCENGINE,
	SMU_11_0_7_ODSETTING_AUTOOCMEMORY,
	SMU_11_0_7_ODSETTING_FAN_CURVE_TEMPERATURE_1,
	SMU_11_0_7_ODSETTING_FAN_CURVE_SPEED_1,
	SMU_11_0_7_ODSETTING_FAN_CURVE_TEMPERATURE_2,
	SMU_11_0_7_ODSETTING_FAN_CURVE_SPEED_2,
	SMU_11_0_7_ODSETTING_FAN_CURVE_TEMPERATURE_3,
	SMU_11_0_7_ODSETTING_FAN_CURVE_SPEED_3,
	SMU_11_0_7_ODSETTING_FAN_CURVE_TEMPERATURE_4,
	SMU_11_0_7_ODSETTING_FAN_CURVE_SPEED_4,
	SMU_11_0_7_ODSETTING_FAN_CURVE_TEMPERATURE_5,
	SMU_11_0_7_ODSETTING_FAN_CURVE_SPEED_5,
	SMU_11_0_7_ODSETTING_AUTO_FAN_ACOUSTIC_LIMIT,
	SMU_11_0_7_ODSETTING_POWER_MODE,
	SMU_11_0_7_ODSETTING_COUNT
)

PPATUI_ENUMER(SMU_11_0_7_PWRMODE_SETTING,
	SMU_11_0_7_PMSETTING_POWER_LIMIT_QUIET,
	SMU_11_0_7_PMSETTING_POWER_LIMIT_BALANCE,
	SMU_11_0_7_PMSETTING_POWER_LIMIT_TURBO,
	SMU_11_0_7_PMSETTING_POWER_LIMIT_RAGE,
	SMU_11_0_7_PMSETTING_ACOUSTIC_TEMP_QUIET,
	SMU_11_0_7_PMSETTING_ACOUSTIC_TEMP_BALANCE,
	SMU_11_0_7_PMSETTING_ACOUSTIC_TEMP_TURBO,
	SMU_11_0_7_PMSETTING_ACOUSTIC_TEMP_RAGE,
	SMU_11_0_7_PMSETTING_ACOUSTIC_TARGET_RPM_QUIET,
	SMU_11_0_7_PMSETTING_ACOUSTIC_TARGET_RPM_BALANCE,
	SMU_11_0_7_PMSETTING_ACOUSTIC_TARGET_RPM_TURBO,
	SMU_11_0_7_PMSETTING_ACOUSTIC_TARGET_RPM_RAGE,
	SMU_11_0_7_PMSETTING_ACOUSTIC_LIMIT_RPM_QUIET,
	SMU_11_0_7_PMSETTING_ACOUSTIC_LIMIT_RPM_BALANCE,
	SMU_11_0_7_PMSETTING_ACOUSTIC_LIMIT_RPM_TURBO,
	SMU_11_0_7_PMSETTING_ACOUSTIC_LIMIT_RPM_RAGE,
	SMU_11_0_7_PMSETTING_COUNT
)

PPATUI_ENUMER(SMU_11_0_PPCLOCK_ID,
	SMU_11_0_PPCLOCK_GFXCLK,
	SMU_11_0_PPCLOCK_VCLK,
	SMU_11_0_PPCLOCK_DCLK,
	SMU_11_0_PPCLOCK_ECLK,
	SMU_11_0_PPCLOCK_SOCCLK,
	SMU_11_0_PPCLOCK_UCLK,
	SMU_11_0_PPCLOCK_DCEFCLK,
	SMU_11_0_PPCLOCK_DISPCLK,
	SMU_11_0_PPCLOCK_PIXCLK,
	SMU_11_0_PPCLOCK_PHYCLK,
	SMU_11_0_PPCLOCK_COUNT
)
PPATUI_ENUMER(SMU_11_0_7_PPCLOCK_ID,
	SMU_11_0_7_PPCLOCK_GFXCLK,
	SMU_11_0_7_PPCLOCK_SOCCLK,
	SMU_11_0_7_PPCLOCK_UCLK,
	SMU_11_0_7_PPCLOCK_FCLK,
	SMU_11_0_7_PPCLOCK_DCLK_0,
	SMU_11_0_7_PPCLOCK_VCLK_0,
	SMU_11_0_7_PPCLOCK_DCLK_1,
	SMU_11_0_7_PPCLOCK_VCLK_1,
	SMU_11_0_7_PPCLOCK_DCEFCLK,
	SMU_11_0_7_PPCLOCK_DISPCLK,
	SMU_11_0_7_PPCLOCK_PIXCLK,
	SMU_11_0_7_PPCLOCK_PHYCLK,
	SMU_11_0_7_PPCLOCK_DTBCLK,
	SMU_11_0_7_PPCLOCK_COUNT
)
PPATUI_ENUMER(I2cControllerName_SMU_11_0_0_e, // see I2cControllerName_e
	I2C_CONTROLLER_NAME_VR_GFX,
	I2C_CONTROLLER_NAME_VR_SOC,
	I2C_CONTROLLER_NAME_VR_VDDCI,
	I2C_CONTROLLER_NAME_VR_MVDD,
	I2C_CONTROLLER_NAME_LIQUID_0,
	I2C_CONTROLLER_NAME_LIQUID_1,
	I2C_CONTROLLER_NAME_PLX,

	I2C_CONTROLLER_NAME_COUNT_SMU11_PPT3
)
PPATUI_ENUMER(I2cControllerName_SMU_11_0_7_e, // see I2cControllerName_e
	I2C_CONTROLLER_NAME_VR_GFX,
	I2C_CONTROLLER_NAME_VR_SOC,
	I2C_CONTROLLER_NAME_VR_VDDCI,
	I2C_CONTROLLER_NAME_VR_MVDD,
	I2C_CONTROLLER_NAME_LIQUID_0,
	I2C_CONTROLLER_NAME_LIQUID_1,
	I2C_CONTROLLER_NAME_PLX,
	I2C_CONTROLLER_NAME_SPARE,

	I2C_CONTROLLER_NAME_COUNT_SMU11_PPT7
)


/******************************************************************************/
//smu_v13_0_7_pptable.h / smu13_driver_if_v13_0_7.h

PPATUI_ENUMER(SMU_13_0_7_ODFEATURE_CAP,
	SMU_13_0_7_ODCAP_GFXCLK_LIMITS,
	SMU_13_0_7_ODCAP_UCLK_LIMITS,
	SMU_13_0_7_ODCAP_POWER_LIMIT,
	SMU_13_0_7_ODCAP_FAN_ACOUSTIC_LIMIT,
	SMU_13_0_7_ODCAP_FAN_SPEED_MIN,
	SMU_13_0_7_ODCAP_TEMPERATURE_FAN,
	SMU_13_0_7_ODCAP_TEMPERATURE_SYSTEM,
	SMU_13_0_7_ODCAP_MEMORY_TIMING_TUNE,
	SMU_13_0_7_ODCAP_FAN_ZERO_RPM_CONTROL,
	SMU_13_0_7_ODCAP_AUTO_UV_ENGINE,
	SMU_13_0_7_ODCAP_AUTO_OC_ENGINE,
	SMU_13_0_7_ODCAP_AUTO_OC_MEMORY,
	SMU_13_0_7_ODCAP_FAN_CURVE,
	SMU_13_0_7_ODCAP_AUTO_FAN_ACOUSTIC_LIMIT,
	SMU_13_0_7_ODCAP_POWER_MODE,
	SMU_13_0_7_ODCAP_PER_ZONE_GFX_VOLTAGE_OFFSET,
	SMU_13_0_7_ODCAP_COUNT
)
PPATUI_ENUMER(SMU_13_0_7_ODSETTING_ID,
	SMU_13_0_7_ODSETTING_GFXCLKFMAX,
	SMU_13_0_7_ODSETTING_GFXCLKFMIN,
	SMU_13_0_7_ODSETTING_UCLKFMIN,
	SMU_13_0_7_ODSETTING_UCLKFMAX,
	SMU_13_0_7_ODSETTING_POWERPERCENTAGE,
	SMU_13_0_7_ODSETTING_FANRPMMIN,
	SMU_13_0_7_ODSETTING_FANRPMACOUSTICLIMIT,
	SMU_13_0_7_ODSETTING_FANTARGETTEMPERATURE,
	SMU_13_0_7_ODSETTING_OPERATINGTEMPMAX,
	SMU_13_0_7_ODSETTING_ACTIMING,
	SMU_13_0_7_ODSETTING_FAN_ZERO_RPM_CONTROL,
	SMU_13_0_7_ODSETTING_AUTOUVENGINE,
	SMU_13_0_7_ODSETTING_AUTOOCENGINE,
	SMU_13_0_7_ODSETTING_AUTOOCMEMORY,
	SMU_13_0_7_ODSETTING_FAN_CURVE_TEMPERATURE_1,
	SMU_13_0_7_ODSETTING_FAN_CURVE_SPEED_1,
	SMU_13_0_7_ODSETTING_FAN_CURVE_TEMPERATURE_2,
	SMU_13_0_7_ODSETTING_FAN_CURVE_SPEED_2,
	SMU_13_0_7_ODSETTING_FAN_CURVE_TEMPERATURE_3,
	SMU_13_0_7_ODSETTING_FAN_CURVE_SPEED_3,
	SMU_13_0_7_ODSETTING_FAN_CURVE_TEMPERATURE_4,
	SMU_13_0_7_ODSETTING_FAN_CURVE_SPEED_4,
	SMU_13_0_7_ODSETTING_FAN_CURVE_TEMPERATURE_5,
	SMU_13_0_7_ODSETTING_FAN_CURVE_SPEED_5,
	SMU_13_0_7_ODSETTING_AUTO_FAN_ACOUSTIC_LIMIT,
	SMU_13_0_7_ODSETTING_POWER_MODE,
	SMU_13_0_7_ODSETTING_PER_ZONE_GFX_VOLTAGE_OFFSET_POINT_1,
	SMU_13_0_7_ODSETTING_PER_ZONE_GFX_VOLTAGE_OFFSET_POINT_2,
	SMU_13_0_7_ODSETTING_PER_ZONE_GFX_VOLTAGE_OFFSET_POINT_3,
	SMU_13_0_7_ODSETTING_PER_ZONE_GFX_VOLTAGE_OFFSET_POINT_4,
	SMU_13_0_7_ODSETTING_PER_ZONE_GFX_VOLTAGE_OFFSET_POINT_5,
	SMU_13_0_7_ODSETTING_PER_ZONE_GFX_VOLTAGE_OFFSET_POINT_6,
	SMU_13_0_7_ODSETTING_COUNT
)

PPATUI_ENUMER(SMU_13_0_7_PWRMODE_SETTING,
	SMU_13_0_7_PMSETTING_POWER_LIMIT_QUIET,
	SMU_13_0_7_PMSETTING_POWER_LIMIT_BALANCE,
	SMU_13_0_7_PMSETTING_POWER_LIMIT_TURBO,
	SMU_13_0_7_PMSETTING_POWER_LIMIT_RAGE,
	SMU_13_0_7_PMSETTING_ACOUSTIC_TEMP_QUIET,
	SMU_13_0_7_PMSETTING_ACOUSTIC_TEMP_BALANCE,
	SMU_13_0_7_PMSETTING_ACOUSTIC_TEMP_TURBO,
	SMU_13_0_7_PMSETTING_ACOUSTIC_TEMP_RAGE,
	SMU_13_0_7_PMSETTING_ACOUSTIC_TARGET_RPM_QUIET,
	SMU_13_0_7_PMSETTING_ACOUSTIC_TARGET_RPM_BALANCE,
	SMU_13_0_7_PMSETTING_ACOUSTIC_TARGET_RPM_TURBO,
	SMU_13_0_7_PMSETTING_ACOUSTIC_TARGET_RPM_RAGE,
	SMU_13_0_7_PMSETTING_ACOUSTIC_LIMIT_RPM_QUIET,
	SMU_13_0_7_PMSETTING_ACOUSTIC_LIMIT_RPM_BALANCE,
	SMU_13_0_7_PMSETTING_ACOUSTIC_LIMIT_RPM_TURBO,
	SMU_13_0_7_PMSETTING_ACOUSTIC_LIMIT_RPM_RAGE,
	SMU_13_0_7_PMSETTING_COUNT
)


PPATUI_ENUMER(SMARTSHIFT_VERSION_e,
	SMARTSHIFT_VERSION_1,
	SMARTSHIFT_VERSION_2,
	SMARTSHIFT_VERSION_3
)

PPATUI_ENUMER(SMU13_PPCLK_e,
	SMU13_PPCLK_GFXCLK,
	SMU13_PPCLK_SOCCLK,
	SMU13_PPCLK_UCLK,
	SMU13_PPCLK_FCLK,
	SMU13_PPCLK_DCLK_0,
	SMU13_PPCLK_VCLK_0,
	SMU13_PPCLK_DCLK_1,
	SMU13_PPCLK_VCLK_1,
	SMU13_PPCLK_DISPCLK,
	SMU13_PPCLK_DPPCLK,
	SMU13_PPCLK_DPREFCLK,
	SMU13_PPCLK_DCFCLK,
	SMU13_PPCLK_DTBCLK,
	SMU13_PPCLK_COUNT
)

PPATUI_ENUMER(AVFS_TEMP_e,
	AVFS_TEMP_COLD,
	AVFS_TEMP_HOT,
	AVFS_TEMP_COUNT
)

PPATUI_ENUMER(AVFS_D_e,
	AVFS_D_G,
	AVFS_D_M_B,
	AVFS_D_M_S,
	AVFS_D_COUNT
)


PPATUI_ENUMER(FOPT_CALC_e,
	FOPT_CALC_AC_CALC_DC,
	FOPT_PPTABLE_AC_CALC_DC,
	FOPT_CALC_AC_PPTABLE_DC,
	FOPT_PPTABLE_AC_PPTABLE_DC
)

PPATUI_ENUMER(SMU_13_0_7_TEMP_e,
	SMU_13_0_7_TEMP_EDGE,
	SMU_13_0_7_TEMP_HOTSPOT,
	SMU_13_0_7_TEMP_HOTSPOT_G,
	SMU_13_0_7_TEMP_HOTSPOT_M,
	SMU_13_0_7_TEMP_MEM,
	SMU_13_0_7_TEMP_VR_GFX,
	SMU_13_0_7_TEMP_VR_MEM0,
	SMU_13_0_7_TEMP_VR_MEM1,
	SMU_13_0_7_TEMP_VR_SOC,
	SMU_13_0_7_TEMP_VR_U,
	SMU_13_0_7_TEMP_LIQUID0,
	SMU_13_0_7_TEMP_LIQUID1,
	SMU_13_0_7_TEMP_PLX,
	SMU_13_0_7_TEMP_COUNT
)

PPATUI_ENUMER(SVI_PLANE_e,
	SVI_PLANE_GFX,
	SVI_PLANE_SOC,
	SVI_PLANE_VMEMP,
	SVI_PLANE_VDDIO_MEM,
	SVI_PLANE_U,
	SVI_PLANE_COUNT
)

PPATUI_ENUMER(PMFW_VOLT_PLANE_e,
	PMFW_VOLT_PLANE_GFX,
	PMFW_VOLT_PLANE_SOC,
	PMFW_VOLT_PLANE_COUNT
)



PPATUI_ENUMER(MEM_VENDOR_e,
	MEM_VENDOR_SAMSUNG,
	MEM_VENDOR_INFINEON,
	MEM_VENDOR_ELPIDA,
	MEM_VENDOR_ETRON,
	MEM_VENDOR_NANYA,
	MEM_VENDOR_HYNIX,
	MEM_VENDOR_MOSEL,
	MEM_VENDOR_WINBOND,
	MEM_VENDOR_ESMT,
	MEM_VENDOR_PLACEHOLDER0,
	MEM_VENDOR_PLACEHOLDER1,
	MEM_VENDOR_PLACEHOLDER2,
	MEM_VENDOR_PLACEHOLDER3,
	MEM_VENDOR_PLACEHOLDER4,
	MEM_VENDOR_PLACEHOLDER5,
	MEM_VENDOR_MICRON,
	MEM_VENDOR_COUNT
)


PPATUI_ENUMER(PP_GRTAVFS_HW_FUSE_e,
	PP_GRTAVFS_HW_CPO_CTL_ZONE0,
	PP_GRTAVFS_HW_CPO_CTL_ZONE1,
	PP_GRTAVFS_HW_CPO_CTL_ZONE2,
	PP_GRTAVFS_HW_CPO_CTL_ZONE3,
	PP_GRTAVFS_HW_CPO_CTL_ZONE4,
	PP_GRTAVFS_HW_CPO_EN_0_31_ZONE0,
	PP_GRTAVFS_HW_CPO_EN_32_63_ZONE0,
	PP_GRTAVFS_HW_CPO_EN_0_31_ZONE1,
	PP_GRTAVFS_HW_CPO_EN_32_63_ZONE1,
	PP_GRTAVFS_HW_CPO_EN_0_31_ZONE2,
	PP_GRTAVFS_HW_CPO_EN_32_63_ZONE2,
	PP_GRTAVFS_HW_CPO_EN_0_31_ZONE3,
	PP_GRTAVFS_HW_CPO_EN_32_63_ZONE3,
	PP_GRTAVFS_HW_CPO_EN_0_31_ZONE4,
	PP_GRTAVFS_HW_CPO_EN_32_63_ZONE4,
	PP_GRTAVFS_HW_ZONE0_VF,
	PP_GRTAVFS_HW_ZONE1_VF1,
	PP_GRTAVFS_HW_ZONE2_VF2,
	PP_GRTAVFS_HW_ZONE3_VF3,
	PP_GRTAVFS_HW_VOLTAGE_GB,
	PP_GRTAVFS_HW_CPOSCALINGCTRL_ZONE0,
	PP_GRTAVFS_HW_CPOSCALINGCTRL_ZONE1,
	PP_GRTAVFS_HW_CPOSCALINGCTRL_ZONE2,
	PP_GRTAVFS_HW_CPOSCALINGCTRL_ZONE3,
	PP_GRTAVFS_HW_CPOSCALINGCTRL_ZONE4,
	PP_GRTAVFS_HW_RESERVED_0,
	PP_GRTAVFS_HW_RESERVED_1,
	PP_GRTAVFS_HW_RESERVED_2,
	PP_GRTAVFS_HW_RESERVED_3,
	PP_GRTAVFS_HW_RESERVED_4,
	PP_GRTAVFS_HW_RESERVED_5,
	PP_GRTAVFS_HW_RESERVED_6,
	PP_GRTAVFS_HW_FUSE_COUNT
)
PPATUI_ENUMER(PP_GRTAVFS_FW_COMMON_FUSE_e,
	PP_GRTAVFS_FW_COMMON_PPVMIN_Z1_HOT_T0,
	PP_GRTAVFS_FW_COMMON_PPVMIN_Z1_COLD_T0,
	PP_GRTAVFS_FW_COMMON_PPVMIN_Z2_HOT_T0,
	PP_GRTAVFS_FW_COMMON_PPVMIN_Z2_COLD_T0,
	PP_GRTAVFS_FW_COMMON_PPVMIN_Z3_HOT_T0,
	PP_GRTAVFS_FW_COMMON_PPVMIN_Z3_COLD_T0,
	PP_GRTAVFS_FW_COMMON_PPVMIN_Z4_HOT_T0,
	PP_GRTAVFS_FW_COMMON_PPVMIN_Z4_COLD_T0,
	PP_GRTAVFS_FW_COMMON_SRAM_RM_Z0,
	PP_GRTAVFS_FW_COMMON_SRAM_RM_Z1,
	PP_GRTAVFS_FW_COMMON_SRAM_RM_Z2,
	PP_GRTAVFS_FW_COMMON_SRAM_RM_Z3,
	PP_GRTAVFS_FW_COMMON_SRAM_RM_Z4,
	PP_GRTAVFS_FW_COMMON_FUSE_COUNT
)
PPATUI_ENUMER(PP_GRTAVFS_FW_SEP_FUSE_e,
	PP_GRTAVFS_FW_SEP_FUSE_GB1_PWL_VOLTAGE_NEG_1,
	PP_GRTAVFS_FW_SEP_FUSE_GB1_PWL_VOLTAGE_0,
	PP_GRTAVFS_FW_SEP_FUSE_GB1_PWL_VOLTAGE_1,
	PP_GRTAVFS_FW_SEP_FUSE_GB1_PWL_VOLTAGE_2,
	PP_GRTAVFS_FW_SEP_FUSE_GB1_PWL_VOLTAGE_3,
	PP_GRTAVFS_FW_SEP_FUSE_GB1_PWL_VOLTAGE_4,
	PP_GRTAVFS_FW_SEP_FUSE_GB2_PWL_VOLTAGE_NEG_1,
	PP_GRTAVFS_FW_SEP_FUSE_GB2_PWL_VOLTAGE_0,
	PP_GRTAVFS_FW_SEP_FUSE_GB2_PWL_VOLTAGE_1,
	PP_GRTAVFS_FW_SEP_FUSE_GB2_PWL_VOLTAGE_2,
	PP_GRTAVFS_FW_SEP_FUSE_GB2_PWL_VOLTAGE_3,
	PP_GRTAVFS_FW_SEP_FUSE_GB2_PWL_VOLTAGE_4,
	PP_GRTAVFS_FW_SEP_FUSE_VF_NEG_1_FREQUENCY,
	PP_GRTAVFS_FW_SEP_FUSE_VF4_FREQUENCY,
	PP_GRTAVFS_FW_SEP_FUSE_FREQUENCY_TO_COUNT_SCALER_0,
	PP_GRTAVFS_FW_SEP_FUSE_FREQUENCY_TO_COUNT_SCALER_1,
	PP_GRTAVFS_FW_SEP_FUSE_FREQUENCY_TO_COUNT_SCALER_2,
	PP_GRTAVFS_FW_SEP_FUSE_FREQUENCY_TO_COUNT_SCALER_3,
	PP_GRTAVFS_FW_SEP_FUSE_FREQUENCY_TO_COUNT_SCALER_4,
	PP_GRTAVFS_FW_SEP_FUSE_COUNT
)

#endif
